{"version":3,"sources":["Graph.js","Coin.js","Header.js","App.js","index.js"],"names":["Graph","pointData","chartRef","useRef","useState","decreasing","setDecreasing","firstPoint","lastPoint","length","useLayoutEffect","useEffect","label","i","myChartRef","current","getContext","greenGradient","createLinearGradient","addColorStop","redGradient","Chart","type","data","labels","datasets","backgroundColor","borderColor","lineTension","options","legend","display","tooltips","enabled","elements","point","radius","scales","xAxes","scaleLabel","ticks","gridLines","yAxes","title","update","id","height","width","ref","Coin","name","image","symbol","price","volume","priceChange","marketcap","sparkline","className","src","alt","toLocaleString","toFixed","Header","App","coins","setCoins","search","setSearch","axios","get","then","res","console","log","catch","error","filterCoins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","sparkline_in_7d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2595fb47.chunk.js","sourcesContent":["import React, { useRef,useEffect,useState,useLayoutEffect } from 'react'\r\nimport Chart from 'chart.js';\r\n\r\nconst Graph = ({pointData}) => {\r\n\r\nlet chartRef = useRef()\r\n\r\nconst [decreasing,setDecreasing] = useState(false);\r\nlet firstPoint = pointData[0];\r\nlet lastPoint = pointData[pointData.length-1];\r\n\r\nuseLayoutEffect(() => {\r\n  if(firstPoint > lastPoint){\r\n    setDecreasing(true)\r\n  }\r\n},[firstPoint,lastPoint,decreasing])\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  let label = [];\r\nfor(let i = 0; i < 168; i++ ){\r\n  label[i] = i\r\n}\r\n  const myChartRef = chartRef.current.getContext(\"2d\");     \r\n  var greenGradient = myChartRef.createLinearGradient(0, 40, 0, 0);\r\n  greenGradient.addColorStop(0, \"rgba(0, 0, 0, 0)\");\r\n  greenGradient.addColorStop(1, \"rgb(36, 152, 4, 0.8)\");\r\n\r\n  var redGradient = myChartRef.createLinearGradient(0, 40, 0, 0);\r\n  redGradient.addColorStop(0, \"rgba(0, 0, 0, 0)\");\r\n  redGradient.addColorStop(1, \"rgba(240, 65, 53, 0.9)\");\r\n  \r\n\r\n\r\n\r\n       let graph = new Chart(myChartRef, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels:label,\r\n                datasets: [\r\n                    {\r\n                        data: pointData,\r\n                        backgroundColor: decreasing? redGradient : greenGradient,\r\n                        borderColor:decreasing? 'rgba(240, 65, 53, 0.733)' :'rgba(59,172,7,0.65)',\r\n                        lineTension: 0.4\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n              legend: {\r\n                display: false\r\n             },\r\n             tooltips: {\r\n                enabled: false\r\n             },\r\n             elements: {\r\n              point:{\r\n                  radius: 0\r\n              }\r\n            },\r\n             scales: {\r\n              xAxes: [{\r\n                  \r\n                  display:false,\r\n                  scaleLabel:{\r\n                    type:'linear',\r\n                    display:true,\r\n                    \r\n                  },\r\n                  ticks:{\r\n                    \r\n                  },\r\n                  gridLines: {\r\n                      display:true\r\n                  }\r\n              }],\r\n              yAxes: [{\r\n                ticks: {\r\n                 //min: Math.min(...pointData),\r\n                  //max: Math.max(...pointData),\r\n                  //stepSize:0.10\r\n               },\r\n                  display:false,\r\n                  gridLines: {\r\n                      display:true\r\n                  },  \r\n                  title:{\r\n                    display:false\r\n                  }\r\n              }]\r\n            }\r\n             \r\n            }\r\n        });\r\n        graph.update()\r\n      }, [pointData,decreasing])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <canvas id=\"myChart\" height=\"40\" width=\"170\" ref={chartRef}></canvas>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Graph\r\n","import React from 'react'\r\nimport './Coin.css'\r\nimport Graph from './Graph'\r\n\r\n\r\n\r\n\r\nconst Coin = ({id, name, image, symbol, price, volume, priceChange, marketcap, sparkline}) => {\r\n  \r\n\r\n  /** \r\n  useEffect(() => {\r\n    axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=7&interval=hourly`,\r\n    {\r\n    withCredentials: false,\r\n    headers: {\r\n      //'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n      //'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n      //'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n      'Content-Type': 'application/x-www-form-urlencoded' \r\n      }\r\n    }\r\n  )\r\n    .then(res =>{\r\n      setPointData(res.data)\r\n      console.log(name)\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error)\r\n    })\r\n  },[])\r\n*/\r\n\r\n/** \r\n//useEffect(()=>{\r\n  axios.get(url,\r\n  //{\r\n  //withCredentials: false,\r\n  //headers: {\r\n    //'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n    //'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n    //'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n    //'Content-Type': 'application/x-www-form-urlencoded' \r\n    //}\r\n  //}\r\n).then(res=>{\r\n  setPointData(res.data);\r\n}).catch((error)=>{\r\n  console.log(error)\r\n})\r\n},[url])\r\n*/\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"coin-container\">\r\n    <div className=\"coin-row\">\r\n      <div className=\"coin\">\r\n        <img src={image} alt=\"crypto coin\"></img>\r\n        <h1>{name}</h1>\r\n        <p className=\"coin-symbol\">{symbol}</p>\r\n      </div>\r\n      <div className=\"coin-data\">\r\n        <p className=\"coin-price\">${price}</p>\r\n        <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n        {priceChange < 0 ? (<p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>)\r\n        : (<p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>)  \r\n        }\r\n        <p className=\"coin-marketcap\">${marketcap.toLocaleString()}</p>\r\n      </div>\r\n      <div className=\"coin-graph\">\r\n      <Graph pointData={sparkline}/>\r\n    </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Coin\r\n","import React from 'react'\r\nimport './Header.css'\r\nconst Header = () => {\r\n  return (\r\n    <div className=\r\n    \"header-container\">\r\n    <div className=\"header-row\">\r\n      <div id='coin'>\r\n        <p>Coin</p>\r\n      </div>  \r\n\r\n  \r\n      <div id='price'>\r\n        <p>Price</p>\r\n      </div>\r\n\r\n      <div id='volume'>\r\n        <p >Volume</p>\r\n      </div>\r\n      \r\n      <div id='change'>\r\n        <p >24hr</p>\r\n      </div>\r\n      \r\n      <div id='market-cap'>\r\n        <p>Market Cap</p>\r\n      </div>\r\n      \r\n      <div id='seven-days'>\r\n        <p>Last 7 days</p>\r\n      </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import {useEffect, useState, React} from \"react\"\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport Coin from \"./Coin\";\r\nimport Header from \"./Header\";\r\n\r\nfunction App() {\r\n\r\n  const [coins,setCoins] = useState([]);\r\n  const [search,setSearch] = useState('')\r\n\r\n  useEffect(() => {\r\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=true',{\r\n      //withCredentials: false,\r\n     // headers: {\r\n       // 'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n        //'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n        //'Access-Control-Allow-Headers' : 'Origin, Content-Type, X-Auth-Token',\r\n        //'Content-Type': 'application/x-www-form-urlencoded' \r\n      //  }\r\n      }\r\n      )\r\n    .then(res =>{\r\n      setCoins(res.data)\r\n      console.log(res.data)\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error)\r\n    })\r\n  },[])\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  const filterCoins = coins.filter((coin) => {\r\n    return coin.name.toLowerCase().includes(search.toLowerCase())\r\n  })\r\n\r\n  return (\r\n    <div className=\"coin-app\">\r\n      <div className=\"coin-search\">\r\n        <h1 className='coin-text'>Search a currency</h1>\r\n        <form> <input type=\"text\" placeholder=\"Search\" className=\"coin-input\" onChange={handleChange}/></form>\r\n      </div>\r\n      <Header/>\r\n      {filterCoins.map(coin =>{\r\n        return (\r\n          <Coin key={coin.id} name ={coin.name} image={coin.image} symbol={coin.symbol}\r\n          marketcap={coin.market_cap} price={coin.current_price}\r\n          priceChange ={coin.price_change_percentage_24h}\r\n          volume = {coin.total_volume}\r\n          id={coin.id}\r\n          sparkline = {coin.sparkline_in_7d.price}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}